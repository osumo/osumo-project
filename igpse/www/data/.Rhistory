par(mfrow=c(2,1))
boxplot(g18p13.3[k, surv$idx == 1], g18p13.3[k, surv$idx == 2], g18p13.3[k, surv$idx == 3],
g18p13.3[k, surv$idx == 4], g18p13.3[k, surv$idx == 5],outline=FALSE)
boxplot(m18p13.3[k, surv$idx == 1], m18p13.3[k, surv$idx == 2], m18p13.3[k, surv$idx == 3],
m18p13.3[k, surv$idx == 4], m18p13.3[k, surv$idx == 5],outline=FALSE)
par(mfrow=c(1,1))
k <- 10
par(mfrow=c(2,1))
boxplot(g18p13.3[k, surv$idx == 1], g18p13.3[k, surv$idx == 2], g18p13.3[k, surv$idx == 3],
g18p13.3[k, surv$idx == 4], g18p13.3[k, surv$idx == 5],outline=FALSE)
boxplot(m18p13.3[k, surv$idx == 1], m18p13.3[k, surv$idx == 2], m18p13.3[k, surv$idx == 3],
m18p13.3[k, surv$idx == 4], m18p13.3[k, surv$idx == 5],outline=FALSE)
par(mfrow=c(1,1))
k <- 11
par(mfrow=c(2,1))
boxplot(g18p13.3[k, surv$idx == 1], g18p13.3[k, surv$idx == 2], g18p13.3[k, surv$idx == 3],
g18p13.3[k, surv$idx == 4], g18p13.3[k, surv$idx == 5],outline=FALSE)
boxplot(m18p13.3[k, surv$idx == 1], m18p13.3[k, surv$idx == 2], m18p13.3[k, surv$idx == 3],
m18p13.3[k, surv$idx == 4], m18p13.3[k, surv$idx == 5],outline=FALSE)
par(mfrow=c(1,1))
k <- 12
par(mfrow=c(2,1))
boxplot(g18p13.3[k, surv$idx == 1], g18p13.3[k, surv$idx == 2], g18p13.3[k, surv$idx == 3],
g18p13.3[k, surv$idx == 4], g18p13.3[k, surv$idx == 5],outline=FALSE)
boxplot(m18p13.3[k, surv$idx == 1], m18p13.3[k, surv$idx == 2], m18p13.3[k, surv$idx == 3],
m18p13.3[k, surv$idx == 4], m18p13.3[k, surv$idx == 5],outline=FALSE)
par(mfrow=c(1,1))
k <- 14
par(mfrow=c(2,1))
boxplot(g18p13.3[k, surv$idx == 1], g18p13.3[k, surv$idx == 2], g18p13.3[k, surv$idx == 3],
g18p13.3[k, surv$idx == 4], g18p13.3[k, surv$idx == 5],outline=FALSE)
boxplot(m18p13.3[k, surv$idx == 1], m18p13.3[k, surv$idx == 2], m18p13.3[k, surv$idx == 3],
m18p13.3[k, surv$idx == 4], m18p13.3[k, surv$idx == 5],outline=FALSE)
par(mfrow=c(1,1))
k <- 15
par(mfrow=c(2,1))
boxplot(g18p13.3[k, surv$idx == 1], g18p13.3[k, surv$idx == 2], g18p13.3[k, surv$idx == 3],
g18p13.3[k, surv$idx == 4], g18p13.3[k, surv$idx == 5],outline=FALSE)
boxplot(m18p13.3[k, surv$idx == 1], m18p13.3[k, surv$idx == 2], m18p13.3[k, surv$idx == 3],
m18p13.3[k, surv$idx == 4], m18p13.3[k, surv$idx == 5],outline=FALSE)
par(mfrow=c(1,1))
cor.test
?cor.test
lapply(c(1:44), function(x){cor.test(g18p13.3[x,], m18p13.3[x,], method = 'spearman')})
tmp<-cor.test(g18p13.3[1,], m18p13.3[1,], method = 'spearman')
tmp
tmp$estimate
unlist(lapply(c(1:44), function(x){
tmp<-cor.test(g18p13.3[x,], m18p13.3[x,], method = 'spearman')
return(tmp$estimate)
}))
unlist(lapply(c(1:44), function(x){
tmp<-cor.test(g18p13.3[x,], m18p13.3[x,], method = 'pearson')
return(tmp$estimate)
}))
unlist(lapply(c(1:44), function(x){
tmp<-cor.test(g18p13.3[x,], m18p13.3[x,], method = 'spearman')
return(tmp$estimate)
}))
unlist(lapply(c(1:44), function(x){
tmp<-cor.test(g18p13.3[x,surv$idx == 1], m18p13.3[x,surv$idx == 1], method = 'spearman')
return(tmp$estimate)
}))
hist(unlist(lapply(c(1:44), function(x){
tmp<-cor.test(g18p13.3[x,surv$idx == 1], m18p13.3[x,surv$idx == 1], method = 'spearman')
return(tmp$estimate)
})))
hist(unlist(lapply(c(1:44), function(x){
tmp<-cor.test(g18p13.3[x,surv$idx == 1], m18p13.3[x,surv$idx == 1], method = 'spearman')
return(tmp$estimate)
})))
hist(unlist(lapply(c(1:44), function(x){
tmp<-cor.test(g18p13.3[x,surv$idx == 2], m18p13.3[x,surv$idx == 2], method = 'spearman')
return(tmp$estimate)
})))
hist(unlist(lapply(c(1:44), function(x){
tmp<-cor.test(g18p13.3[x,surv$idx == 3], m18p13.3[x,surv$idx == 3], method = 'spearman')
return(tmp$estimate)
})))
hist(unlist(lapply(c(1:44), function(x){
tmp<-cor.test(g18p13.3[x,surv$idx == 4], m18p13.3[x,surv$idx == 4], method = 'spearman')
return(tmp$estimate)
})))
h<-unlist(lapply(c(1:44), function(x){
tmp<-cor.test(g18p13.3[x,surv$idx == 4], m18p13.3[x,surv$idx == 4], method = 'spearman')
return(tmp$estimate)
}))
hist(h)
h<-unlist(lapply(c(1:44), function(x){
tmp<-cor.test(g18p13.3[x,surv$idx == 5], m18p13.3[x,surv$idx == 5], method = 'spearman')
return(tmp$estimate)
}))
hist(h)
h<-unlist(lapply(c(1:44), function(x){
tmp<-cor.test(g18p13.3[x,surv$idx == 1], m18p13.3[x,surv$idx == 1], method = 'spearman')
return(tmp$estimate)
}))
hist(h)
h<-unlist(lapply(c(1:44), function(x){
tmp<-cor.test(g18p13.3[x,surv$idx == 2], m18p13.3[x,surv$idx == 2], method = 'spearman')
return(tmp$estimate)
}))
hist(h)
h<-unlist(lapply(c(1:44), function(x){
tmp<-cor.test(g18p13.3[x,surv$idx == 3], m18p13.3[x,surv$idx == 3], method = 'spearman')
return(tmp$estimate)
}))
hist(h)
h<-unlist(lapply(c(1:44), function(x){
tmp<-cor.test(g18p13.3[x,surv$idx == 3], m18p13.3[x,surv$idx == 3], method = 'pearson')
return(tmp$estimate)
}))
hist(h)
h<-unlist(lapply(c(1:44), function(x){
tmp<-cor.test(g18p13.3[x,surv$idx == 3], m18p13.3[x,surv$idx == 3], method = 'spearman')
return(tmp$estimate)
}))
hist(h)
h<-unlist(lapply(c(1:44), function(x){
tmp<-cor.test(g18p13.3[x,surv$idx == 3], m18p13.3[x,surv$idx == 3], method = 'pearson')
return(tmp$estimate)
}))
hist(h)
h<-unlist(lapply(c(1:44), function(x){
tmp<-cor.test(g18p13.3[x,], m18p13.3[x,], method = 'pearson')
return(tmp$estimate)
}))
hist(h)
k <- 1
par(mfrow=c(2,1))
boxplot(g18p13.3[k, surv$idx == 1], g18p13.3[k, surv$idx == 2], g18p13.3[k, surv$idx == 3],
g18p13.3[k, surv$idx == 4], g18p13.3[k, surv$idx == 5],outline=FALSE)
boxplot(m18p13.3[k, surv$idx == 1], m18p13.3[k, surv$idx == 2], m18p13.3[k, surv$idx == 3],
m18p13.3[k, surv$idx == 4], m18p13.3[k, surv$idx == 5],outline=FALSE)
par(mfrow=c(1,1))
k <- 44
par(mfrow=c(2,1))
boxplot(g18p13.3[k, surv$idx == 1], g18p13.3[k, surv$idx == 2], g18p13.3[k, surv$idx == 3],
g18p13.3[k, surv$idx == 4], g18p13.3[k, surv$idx == 5],outline=FALSE)
boxplot(m18p13.3[k, surv$idx == 1], m18p13.3[k, surv$idx == 2], m18p13.3[k, surv$idx == 3],
m18p13.3[k, surv$idx == 4], m18p13.3[k, surv$idx == 5],outline=FALSE)
par(mfrow=c(1,1))
k <- 43
par(mfrow=c(2,1))
boxplot(g18p13.3[k, surv$idx == 1], g18p13.3[k, surv$idx == 2], g18p13.3[k, surv$idx == 3],
g18p13.3[k, surv$idx == 4], g18p13.3[k, surv$idx == 5],outline=FALSE)
boxplot(m18p13.3[k, surv$idx == 1], m18p13.3[k, surv$idx == 2], m18p13.3[k, surv$idx == 3],
m18p13.3[k, surv$idx == 4], m18p13.3[k, surv$idx == 5],outline=FALSE)
par(mfrow=c(1,1))
k <- 42
par(mfrow=c(2,1))
boxplot(g18p13.3[k, surv$idx == 1], g18p13.3[k, surv$idx == 2], g18p13.3[k, surv$idx == 3],
g18p13.3[k, surv$idx == 4], g18p13.3[k, surv$idx == 5],outline=FALSE)
boxplot(m18p13.3[k, surv$idx == 1], m18p13.3[k, surv$idx == 2], m18p13.3[k, surv$idx == 3],
m18p13.3[k, surv$idx == 4], m18p13.3[k, surv$idx == 5],outline=FALSE)
par(mfrow=c(1,1))
k <- 43
par(mfrow=c(2,1))
boxplot(g18p13.3[k, surv$idx == 1], g18p13.3[k, surv$idx == 2], g18p13.3[k, surv$idx == 3],
g18p13.3[k, surv$idx == 4], g18p13.3[k, surv$idx == 5],outline=FALSE)
boxplot(m18p13.3[k, surv$idx == 1], m18p13.3[k, surv$idx == 2], m18p13.3[k, surv$idx == 3],
m18p13.3[k, surv$idx == 4], m18p13.3[k, surv$idx == 5],outline=FALSE)
par(mfrow=c(1,1))
cnv.matrix
boxplot(type.1/83, type.2/76, type.3/103, type.4/111, type.5/68)
match.idx
match(colnames(cnv.matrix),unlist(lapply(surv$patient_id, function(x){ paste(x,'-01', sep='' )} )))
View(cnv.matrix)
surv[33]
surv[331,]
surv[37,]
surv[311,]
match(colnames(cnv.matrix),unlist(lapply(surv$patient_id, function(x){ paste(x,'-01', sep='' )} )))
cnv.data <- cnv.matrix[, match(colnames(cnv.matrix),unlist(lapply(surv$patient_id, function(x){ paste(x,'-01', sep='' )} )))]
View(cnv.data)
View(surv)
library(rCharts)
n1 <- nPlot(mpg ~ wt, data = mtcars, group = "gear", type = "scatterChart")
n1$addControls("x", value = "wt", values = names(mtcars))
n1$addControls("group", value = "gear", values = names(mtcars))
n1
n1
shiny::runApp('Dropbox/current_working_folder/iGPSe/shiny')
shiny::runApp('Dropbox/current_working_folder/iGPSe/shiny')
shiny::runApp('Dropbox/current_working_folder/iGPSe/shiny')
shiny::runApp('Dropbox/current_working_folder/iGPSe/shiny')
shiny::runApp('Dropbox/current_working_folder/iGPSe/shiny')
if (!require('shiny')) install.packages("shiny")
shiny::runGitHub("shiny-examples", "rstudio", subdir = "001-hello")
if (!require('shiny')) install.packages("shiny")
shiny::runGitHub("shiny-examples", "rstudio", subdir = "107-module-output")
if (!require('shiny')) install.packages("shiny")
shiny::runGitHub("shiny-examples", "rstudio", subdir = "107-events")
if (!require('shiny')) install.packages("shiny")
shiny::runGitHub("shiny-examples", "rstudio", subdir = "104-plot-interaction-select")
install.packages('Cairo')
if (!require('shiny')) install.packages("shiny")
shiny::runGitHub("shiny-examples", "rstudio", subdir = "104-plot-interaction-select")
install.packages('cairo')
load("/home/dingh/Dropbox/may6/pred.RData")
setwd('Documents/walmart/')
sub <- fread('sample_submission.csv')
require(xgboost)
require(Matrix)
require(data.table)
require(bit64)
library(parallel)
library(Rtsne)
sub <- fread('sample_submission.csv')
pred = matrix(pred,38,length(pred)/38)
pred = t(pred)
sub<- as.matrix(sub)
sub[,c(2:39)]<- pred
write.csv(sub, file = 'first.csv',  sep=",", quote = F, row.names = F)
shiny::runApp('~/Dropbox/current_working_folder/iGPSe/shiny')
if (!require('shiny')) install.packages("shiny")
shiny::runGitHub("shiny-examples", "rstudio", subdir = "008-html")
shiny::runApp('~/Dropbox/current_working_folder/iGPSe/shiny')
shiny::runGitHub("hclust-shiny", "joyofdata")
shiny::runApp('~/Dropbox/current_working_folder/iGPSe/shiny')
shiny::runApp('~/Dropbox/current_working_folder/iGPSe/shiny')
shiny::runApp('~/Dropbox/current_working_folder/iGPSe/shiny')
shiny::runApp('~/Dropbox/current_working_folder/iGPSe/shiny')
shiny::runApp('~/Dropbox/current_working_folder/iGPSe/shiny')
shiny::runApp('~/Dropbox/current_working_folder/iGPSe/shiny')
shiny::runApp('~/Dropbox/current_working_folder/iGPSe/shiny')
shiny::runApp('~/Dropbox/current_working_folder/iGPSe/shiny')
shiny::runApp('~/Dropbox/current_working_folder/iGPSe/shiny')
shiny::runApp('~/Dropbox/current_working_folder/iGPSe/shiny')
shiny::runApp('~/Dropbox/current_working_folder/iGPSe/shiny')
shiny::runApp('~/Dropbox/current_working_folder/iGPSe/shiny')
shiny::runApp('~/Dropbox/current_working_folder/iGPSe/shiny')
shiny::runApp('~/Dropbox/current_working_folder/iGPSe/shiny')
shiny::runApp('~/Dropbox/current_working_folder/iGPSe/shiny')
shiny::runApp('~/Dropbox/current_working_folder/iGPSe/shiny')
shiny::runApp('~/Dropbox/current_working_folder/iGPSe/shiny')
shiny::runApp('~/Dropbox/current_working_folder/iGPSe/shiny')
shiny::runApp('~/Dropbox/current_working_folder/iGPSe/shiny')
shiny::runApp('~/Dropbox/current_working_folder/iGPSe/shiny')
shiny::runApp('~/Dropbox/current_working_folder/iGPSe/shiny')
shiny::runApp('~/Dropbox/current_working_folder/iGPSe/shiny')
shiny::runApp('~/Dropbox/current_working_folder/iGPSe/shiny')
shiny::runApp('~/Dropbox/current_working_folder/iGPSe/shiny')
shiny::runApp('~/Dropbox/current_working_folder/iGPSe/shiny')
shiny::runApp('~/Dropbox/current_working_folder/iGPSe/shiny')
library(jsonlite)
clustering.result <- fromJSON(file='./Data/tmp.data.json')
clustering.result <- fromJSON('./Data/tmp.data.json')
setwd('/home/dingh/Dropbox/current_working_folder/iGPSe/shiny/data/')
clustering.result <- fromJSON('tmp.data.json')
clustering.result <- fromJSON(readChar('tmp.data.json', file.info('tmp.data.json')$size))
clustering.result <- fromJSON('tmp.data.json')
clustering.result <- fromJSON('tmp.data.json')
clustering.result
clustering.result$key
clustering.result[1]
clustering.result[[1]]
clustering.result[[1]]$key
clustering.result[[1]]$values
toJSON(clustering.result)
shiny::runApp('~/Dropbox/current_working_folder/iGPSe/shiny')
shiny::runApp('~/Dropbox/current_working_folder/iGPSe/shiny')
shiny::runApp('~/Dropbox/current_working_folder/iGPSe/shiny')
shiny::runApp('~/Dropbox/current_working_folder/iGPSe/shiny')
shiny::runApp('~/Dropbox/current_working_folder/iGPSe/shiny')
shiny::runApp('~/Dropbox/current_working_folder/iGPSe/shiny')
shiny::runApp('~/Dropbox/current_working_folder/iGPSe/shiny')
shiny::runApp('~/Dropbox/current_working_folder/iGPSe/shiny')
shiny::runApp('~/Dropbox/current_working_folder/iGPSe/shiny')
shiny::runApp('~/Dropbox/current_working_folder/iGPSe/shiny')
shiny::runApp('~/Dropbox/current_working_folder/iGPSe/shiny')
shiny::runApp('~/Dropbox/current_working_folder/iGPSe/shiny')
shiny::runApp('~/Dropbox/current_working_folder/iGPSe/shiny')
shiny::runApp('~/Dropbox/current_working_folder/iGPSe/shiny')
shiny::runApp('~/Dropbox/current_working_folder/iGPSe/shiny')
shiny::runApp('~/Dropbox/current_working_folder/iGPSe/shiny')
shiny::runApp('~/Dropbox/current_working_folder/iGPSe/shiny')
shiny::runApp('~/Dropbox/current_working_folder/iGPSe/shiny')
shiny::runApp('~/Dropbox/current_working_folder/iGPSe/shiny')
shiny::runApp('~/Dropbox/current_working_folder/iGPSe/shiny')
shiny::runApp('~/Dropbox/current_working_folder/iGPSe/shiny')
shiny::runApp('~/Dropbox/current_working_folder/iGPSe/shiny')
shiny::runApp('~/Dropbox/current_working_folder/iGPSe/shiny')
shiny::runApp('~/Dropbox/current_working_folder/iGPSe/shiny')
shiny::runApp('~/Dropbox/current_working_folder/iGPSe/shiny')
shiny::runApp('~/Dropbox/current_working_folder/iGPSe/shiny')
shiny::runApp('~/Dropbox/current_working_folder/iGPSe/shiny')
shiny::runApp('~/Dropbox/current_working_folder/iGPSe/shiny')
shiny::runApp('~/Dropbox/current_working_folder/iGPSe/shiny')
shiny::runApp('~/Dropbox/current_working_folder/iGPSe/shiny')
shiny::runApp('~/Dropbox/current_working_folder/iGPSe/shiny')
shiny::runApp('~/Dropbox/current_working_folder/iGPSe/shiny')
shiny::runApp('~/Dropbox/current_working_folder/iGPSe/shiny')
shiny::runApp('~/Dropbox/current_working_folder/iGPSe/shiny')
shiny::runApp('~/Dropbox/current_working_folder/iGPSe/shiny')
shiny::runApp('~/Dropbox/current_working_folder/iGPSe/shiny')
shiny::runApp('~/Dropbox/current_working_folder/iGPSe/shiny')
shiny::runApp('~/Dropbox/current_working_folder/iGPSe/shiny')
shiny::runApp('~/Dropbox/current_working_folder/iGPSe/shiny')
shiny::runApp('~/Dropbox/current_working_folder/iGPSe/shiny')
shiny::runApp('~/Dropbox/current_working_folder/iGPSe/shiny')
shiny::runApp('~/Dropbox/current_working_folder/iGPSe/shiny')
shiny::runApp('~/Dropbox/current_working_folder/iGPSe/shiny')
shiny::runApp('~/Dropbox/current_working_folder/iGPSe/shiny')
shiny::runApp('~/Dropbox/current_working_folder/iGPSe/shiny')
shiny::runApp('~/Dropbox/current_working_folder/iGPSe/shiny')
shiny::runApp('~/Dropbox/current_working_folder/iGPSe/shiny')
shiny::runApp('~/Dropbox/current_working_folder/iGPSe/shiny')
shiny::runApp('~/Dropbox/current_working_folder/iGPSe/shiny')
shiny::runApp('~/Dropbox/current_working_folder/iGPSe/shiny')
shiny::runApp('~/Dropbox/current_working_folder/iGPSe/shiny')
shiny::runApp('~/Dropbox/current_working_folder/iGPSe/shiny')
shiny::runApp('~/Dropbox/current_working_folder/iGPSe/shiny')
shiny::runApp('~/Dropbox/current_working_folder/iGPSe/shiny')
shiny::runApp('~/Dropbox/current_working_folder/iGPSe/shiny')
shiny::runApp('~/Dropbox/current_working_folder/iGPSe/shiny')
shiny::runApp('~/Dropbox/current_working_folder/iGPSe/shiny')
shiny::runApp('~/Dropbox/current_working_folder/iGPSe/shiny')
shiny::runApp('~/Dropbox/current_working_folder/iGPSe/shiny')
shiny::runApp('~/Dropbox/current_working_folder/iGPSe/shiny')
shiny::runApp('~/Dropbox/current_working_folder/iGPSe/shiny')
shiny::runApp('~/Dropbox/current_working_folder/iGPSe/shiny')
shiny::runApp('~/Dropbox/current_working_folder/iGPSe/shiny')
shiny::runApp('~/Dropbox/current_working_folder/iGPSe/shiny')
shiny::runApp('~/Dropbox/current_working_folder/iGPSe/shiny')
shiny::runApp('~/Dropbox/current_working_folder/iGPSe/shiny')
shiny::runApp('~/Dropbox/current_working_folder/iGPSe/shiny')
shiny::runApp('~/Dropbox/current_working_folder/iGPSe/shiny')
shiny::runApp('~/Dropbox/current_working_folder/iGPSe/shiny')
shiny::runApp('~/Dropbox/current_working_folder/iGPSe/shiny')
shiny::runApp('~/Dropbox/current_working_folder/iGPSe/shiny')
shiny::runApp('~/Dropbox/current_working_folder/iGPSe/shiny')
shiny::runApp('~/Dropbox/current_working_folder/iGPSe/shiny')
shiny::runApp('~/Dropbox/current_working_folder/iGPSe/shiny')
shiny::runApp('~/Dropbox/current_working_folder/iGPSe/shiny')
shiny::runApp('~/Dropbox/current_working_folder/iGPSe/shiny')
shiny::runApp('~/Dropbox/current_working_folder/iGPSe/shiny')
shiny::runApp('~/Dropbox/current_working_folder/iGPSe/shiny')
shiny::runApp('~/Dropbox/current_working_folder/iGPSe/shiny')
shiny::runApp('~/Dropbox/current_working_folder/iGPSe/shiny')
shiny::runApp('~/Dropbox/current_working_folder/iGPSe/shiny')
mRNA.cl$cluster
as.numeric(mRNA.cl$cluster)
shiny::runApp('~/Dropbox/current_working_folder/iGPSe/shiny')
shiny::runApp('~/Dropbox/current_working_folder/iGPSe/shiny')
shiny::runApp('~/Dropbox/current_working_folder/iGPSe/shiny')
shiny::runApp('~/Dropbox/current_working_folder/iGPSe/shiny')
shiny::runApp('~/Dropbox/current_working_folder/iGPSe/shiny')
require(pheatmap)
install.packages('pheatmap')
require(pheatmap)
cluster_index<-matrix()
length(cluster_index)<-2
for(i in 1:k){ cluster_index[i]<-length(mRNA.cl[mRNA.cl$cluster == i]) }
for(i in 1:2){ cluster_index[i]<-length(mRNA.cl[mRNA.cl$cluster == i]) }
ord<-order(cluster_index, decreasing=T)
data<-t(mRNA.m)
pheatmap(data)
k = 3
cl <- kmeans(data,k)
length(cluster_index)<-k
for(i in 1:k){ cluster_index[i]<-length(cl[cl$cluster == i]) }
ord<-order(cluster_index, decreasing=T)
temp= data[cl$cluster == ord[1],];
seperation<-matrix(nrow=10,ncol=dim(data)[2])
temp<-rbind(temp, seperation)
pheatmap(temp[,1:dim(data)[2]],cluster_rows=F,cluster_cols=F, show_rownames=F,
show_colnames=F, width = 150, height = 200, border_color=NA,
color=colorRampPalette(rev(c("#D73027", "#FC8D59", "#FEE090", "#FFFFBF", "#E0F3F8", "#91BFDB", "#4575B4")))(100))
?colorRampPalette
pheatmap(temp[,1:dim(data)[2]],cluster_rows=F,cluster_cols=F, show_rownames=F,
show_colnames=F, width = 150, height = 200, border_color=NA,
color=colorRampPalette(rev(c("#D73027", "#FC8D59", "#FEE090", "#FFFFBF", "#E0F3F8", "#91BFDB", "#4575B4")))(100))
pheatmap(temp[,1:dim(data)[2]],cluster_rows=F,cluster_cols=F, show_rownames=F, show_colnames=F, width = 150, height = 200, border_color=NA, color=colorRampPalette(rev(c("#D73027", "#FC8D59", "#FEE090", "#FFFFBF", "#E0F3F8", "#91BFDB", "#4575B4")))(100))
for(i in 2:k){
temp<-rbind(temp , data[cl$cluster == ord[i],],  seperation)
}
pheatmap(temp[,1:dim(data)[2]],cluster_rows=F,cluster_cols=F, show_rownames=F, show_colnames=F, width = 150, height = 200, border_color=NA, color=colorRampPalette(rev(c("#D73027", "#FC8D59", "#FEE090", "#FFFFBF", "#E0F3F8", "#91BFDB", "#4575B4")))(100))
View(seperation)
shiny::runApp('~/Dropbox/current_working_folder/iGPSe/shiny')
shiny::runApp('~/Dropbox/current_working_folder/iGPSe/shiny')
shiny::runApp('~/Dropbox/current_working_folder/iGPSe/shiny')
shiny::runApp('~/Dropbox/current_working_folder/iGPSe/shiny')
shiny::runApp('~/Dropbox/current_working_folder/iGPSe/shiny')
shiny::runApp('~/Dropbox/current_working_folder/iGPSe/shiny')
shiny::runApp('~/Dropbox/current_working_folder/iGPSe/shiny')
shiny::runApp('~/Dropbox/current_working_folder/iGPSe/shiny')
shiny::runApp('~/Dropbox/current_working_folder/iGPSe/shiny')
shiny::runApp('~/Dropbox/current_working_folder/iGPSe/shiny')
?runif
shiny::runApp('~/Dropbox/current_working_folder/iGPSe/shiny')
cl<-cl$cluster
k <- max(cl)
data <- t(mRNA.m)
cluster_index<-matrix()
length(cluster_index)<-k
for(i in 1:k){ cluster_index[i]<-length(cl[cl == i]) }
ord<-order(cluster_index, decreasing=T)
temp= data[cl == ord[1],];
seperation<-matrix(nrow=10,ncol=dim(data)[2])
temp<-rbind(temp, seperation)
for(i in 2:k){
temp<-rbind(temp , data[cl == ord[i],],  seperation)
}
pheatmap(temp[,1:dim(data)[2]],cluster_rows=F,cluster_cols=F, show_rownames=F,
show_colnames=F, width = 150, height = 200, border_color=NA,
color=colorRampPalette(rev(c("#D73027", "#FC8D59", "#FEE090", "#FFFFBF", "#E0F3F8", "#91BFDB", "#4575B4")))(100))
shiny::runApp('~/Dropbox/current_working_folder/iGPSe/shiny')
shiny::runApp('~/Dropbox/current_working_folder/iGPSe/shiny')
install.packages('factoextra')
install.packages('factoextra')
library(devtools)
install_github("kassambara/factoextra")
shiny::runApp('~/Dropbox/current_working_folder/iGPSe/shiny')
require(factoextra)
?fviz_silhouette
shiny::runApp('~/Dropbox/current_working_folder/iGPSe/shiny')
shiny::runApp('~/Dropbox/current_working_folder/iGPSe/shiny')
shiny::runApp('~/Dropbox/current_working_folder/iGPSe/shiny')
shiny::runApp('~/Dropbox/current_working_folder/iGPSe/shiny')
shiny::runApp('~/Dropbox/current_working_folder/iGPSe/shiny')
clustering_result
clustering_result
shiny::runApp('~/Dropbox/current_working_folder/iGPSe/shiny')
clustering_result <- fromJSON(file_content('data/tmp.data.json'))
shiny::runApp('~/Dropbox/current_working_folder/iGPSe/shiny')
clustering_result[1]
clustering_result[[1]]
clustering_result[[1]][1]
clustering_result[[1]][2]
clustering_result[[2]][2]
clustering_result[[2]]
clustering_result[[3]]
clustering_result[[2]][3]
clustering_result[[2]][4]
clustering_result[[2]][5]
class(clustering_result[[2]][5])
class(clustering_result[[2]][5][1])
clustering_result[[2]][5][1]
clustering_result[[2]][5][2]
tmp<-clustering_result[[2]][5]
tmp$incoming
class(tmp)
clustering_result
length(clustering_result)
list(1,1)
clustering_result
clustering_result[1]
clustering_result[[1]]
clustering_result[[1]]$key
clustering_result[[1]]$values
class(clustering_result[[1]]$values)
values
clustering_result[[1]]$values[[1]]
incomming
clustering_result[[1]]
clustering_result[[1]]$key
clustering_result[[1]]$key
class(clustering_result[[1]]$key)
as.character( c(1:3))
shiny::runApp('~/Dropbox/current_working_folder/iGPSe/shiny')
shiny::runApp('~/Dropbox/current_working_folder/iGPSe/shiny')
miRNA.cl
mRNA.cl
miRNA.cl
clustering_result[[1]]$key
clustering_result[[1]]$label
clustering_result[[1]]$id
rep("mRNA", 3)
mRNA.cl$size
mRNA.cl$iter
kmeans
?kmeans
k<-length(mRNA.cl$size)
k
mRNA.cl$size
sortm(RNA.cl$size)
sort(mRNA.cl$size)
sort(mRNA.cl$size,decreasing = T)
sort.int(mRNA.cl$size,decreasing = T,index.return = T)
k<-length(mRNA.cl$size)
mRNA.label<- rep("mRNA", k)
mRNA.key <- as.character(sort.int(mRNA.cl$size,decreasing = T,index.return = T)$ix)
k<-length(mRNA.cl$size)
length(mRNA.cl$size)
rep("mRNA", k)
as.character(sort.int(mRNA.cl$size,decreasing = T,index.return = T)$ix)
sort.int(mRNA.cl$size,decreasing = T,index.return = T)$x
mRNA.key <- as.character(sort.int(mRNA.cl$size,decreasing = T,index.return = T)$ix-1)
mRNA.key
mRNA.key <- c(0:k)
mRNA.order <- c(0:k)
mRNA.order
mRNA.order <- c(0:(k-1))
mRNA.order
sort.int(mRNA.cl$size,decreasing = T,index.return = T)$ix
sort.int(mRNA.cl$size,decreasing = T,index.return = T)$x
cumsum(sort.int(mRNA.cl$size,decreasing = T,index.return = T)$x)
mRNA.offsetValue <-c(0, cumsum(sort.int(mRNA.cl$size,decreasing = T,index.return = T)$x)[1:k-1])
mRNA.offsetValue
mRNA.key
sort.int(mRNA.cl$size,decreasing = T,index.return = T)$ix
sort.int(mRNA.cl$size,decreasing = T,index.return = T)$ix-1
mRNA.key <- as.character(sort.int(mRNA.cl$size,decreasing = T,index.return = T)$ix-1)
mRNA.key
mRNA.offsetValue
mRNA.key <- as.character(sort.int(mRNA.cl$size,decreasing = T,index.return = T)$ix)
sort.int(mRNA.cl$size,decreasing = T,index.return = T)$x
k<-length(miRNA.cl$size)
miRNA.label<- rep("miRNA", k)
miRNA.key <- as.character(sort.int(miRNA.cl$size, decreasing = T,index.return = T)$ix)
miRNA.height <- sort.int(miRNA.cl$size,decreasing = T,index.return = T)$x
